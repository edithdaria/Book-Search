{"version":3,"sources":["components/Navbar.js","components/Thumbnail/index.js","components/Grid.js","components/Results.js","utils/API.js","components/Search.js","components/Saved.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","Thumbnail","src","role","style","backgroundImage","Container","fluid","children","Row","Col","size","split","map","join","Results","ResultsListItem","props","console","log","key","key_id","index","onClick","saveBook","buttonText","image","title","authors","description","rel","target","link","axios","get","delete","bookData","post","Search","useState","search","setSearch","results","setResults","handleSearchSubmit","e","preventDefault","then","res","data","items","volumeInfo","imageLinks","thumbnail","infoLink","catch","err","dir","getAttribute","filter","result","API","alert","onSubmit","onChange","value","toLowerCase","replace","placeholder","aria-describedby","Saved","books","setBooks","loadBooks","deleteBook","book","useEffect","class","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5ced8ee6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"#\">Google Book Search</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link to=\"/search\" className=\"nav-link\">Search <span className=\"sr-only\">(current)</span></Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/saved\" className=\"nav-link\">Saved</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// The Thumbnail component renders a div that uses some CSS to render a background image\r\n// It will always keep square proportions at any size without the image warping\r\n// The \"role\" and \"aria label\" are there to identify the element's purpose as an image for accessibility purposes\r\nfunction Thumbnail({ src }) {\r\n  return (\r\n    <div\r\n      className=\"thumbnail\"\r\n      role=\"img\"\r\n      aria-label=\"Book Image\"\r\n      style={{\r\n        backgroundImage: `url(${src})`\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Thumbnail;\r\n","import React from \"react\";\r\n\r\n//bootstrap defs without class names\r\n\r\nexport function Container({ fluid, children }) {\r\n    return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\nexport function Row({ fluid, children }) {\r\n    return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\nexport function Col({ size, children }) {\r\n    return (\r\n      <div\r\n        className={size\r\n          .split(\" \")\r\n          .map(size => \"col-\" + size)\r\n          .join(\" \")}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }","import React from \"react\";\r\nimport Thumbnail from \"./Thumbnail\";\r\nimport { Container, Row, Col } from \"./Grid\";\r\n\r\nexport function Results({ children }) {\r\n    // console.log(\"children\", children);\r\n    return (\r\n        <ul className=\"list-group\">{children}</ul>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport function ResultsListItem(props) {\r\n    console.log(\"props: \", props);\r\n    return (\r\n        <li className=\"list-group-item\">\r\n            <Container >\r\n            <Row>\r\n                <button key={props.key_id} index={props.key_id} onClick={props.saveBook} type=\"button\" className=\"btn btn-dark pull-right\">{props.buttonText}</button>\r\n            </Row>\r\n            <br/>\r\n                <Row>\r\n                    <Col size=\"xs-4 sm-2\">\r\n                        <Thumbnail src={props.image} />\r\n                    </Col>\r\n                    <Col size=\"xs-8 sm-9\">\r\n                        <h4>{props.title}</h4>\r\n                        <p><strong>Authors: </strong>{props.authors}</p>\r\n                        <p><strong>Description: </strong> {props.description}\r\n                        </p>\r\n                        <a rel=\"noreferrer noopener\"\r\n                            target=\"_blank\"\r\n                            href={props.link}>\r\n                            More Info...</a>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </li>\r\n    )\r\n}\r\n","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Results, ResultsListItem } from \"./Results\";\r\nimport { Row, Col, Container } from \"./Grid\";\r\nimport API from \"../utils/API\";\r\n\r\nconst Search = () => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [results, setResults] = useState([]);\r\n\r\n    const handleInputChage = (e) => {\r\n        const { value } = e.target;\r\n        setSearch(value.toLowerCase().replace(/\\s/g, '%'));\r\n    }\r\n\r\n    const handleSearchSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + search)\r\n            .then(res => {\r\n                console.log(\"res\" , res.data.items)\r\n                setResults( res.data.items.map((data) => {\r\n                    return {\r\n                    key_id: data.id,\r\n                    title: data.volumeInfo.title,\r\n                    authors: data.volumeInfo.authors,\r\n                    description: data.volumeInfo.description,\r\n                    image: data.volumeInfo.imageLinks.thumbnail,\r\n                    link: data.volumeInfo.infoLink\r\n                    }\r\n                }))\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    const saveBook = (e) => {\r\n        e.preventDefault();\r\n        console.dir(e.target)\r\n        const id = e.target.getAttribute(\"index\");\r\n        console.log(\"save book:\" + id);\r\n        const bookData = results.filter(result => id === result.key_id)\r\n        console.log(\"books\",bookData)\r\n        API.saveBook(bookData)\r\n        .then((res) => {\r\n        alert(\"Book Saved Successfully!!\")})\r\n        .catch(err => console.log(err)) \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSearchSubmit} className=\"jumbotron form-group\">\r\n                <center>\r\n                    <h1 className=\"display-4\">Google Books Search</h1>\r\n                    <hr className=\"my-4\"></hr>\r\n                    <div className=\"input-group mb-3\">\r\n                        <input onChange={handleInputChage} type=\"text\" className=\"form-control\" placeholder=\"Enter a book name\" aria-label=\"Enter a book name\" aria-describedby=\"basic-addon2\" />\r\n                        <div className=\"input-group-append\">\r\n                            <button onClick={handleSearchSubmit} className=\"btn btn-outline-secondary\" type=\"button\">Submit</button>\r\n                        </div>\r\n                    </div>\r\n                    <br></br>\r\n                </center>\r\n            </form>\r\n            <Container>\r\n                <Row>\r\n                    <Col size=\"xs-12\">\r\n                        <Results>\r\n                            {results.map((result) => {\r\n                                return (\r\n                                    <ResultsListItem\r\n                                        key_id={result.key_id}\r\n                                        key={result.key_id}\r\n                                        title={result.title}\r\n                                        authors={result.authors}\r\n                                        description={result.description}\r\n                                        image={result.image}\r\n                                        link={result.link}\r\n                                        saveBook={saveBook}\r\n                                        buttonText=\"Save\"\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </Results>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Search;\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Results, ResultsListItem } from \"./Results\";\r\nimport { Row, Col, Container } from \"./Grid\";\r\nimport API from \"../utils/API\";\r\n\r\n\r\nconst Saved = () => {\r\n\r\n      // Initialize books as an empty array\r\n      const [books, setBooks] = useState([]);\r\n  \r\n      useEffect(() => {\r\n        loadBooks();\r\n      }, []);\r\n  \r\n      function loadBooks() {\r\n        // Add code here to get all books from the database and store them using setBooks\r\n        API.getBooks()\r\n        .then((res) => {\r\n          console.log(\"response: \" , res.data);\r\n            setBooks(res.data)})\r\n        .catch(err => console.log(err))\r\n  \r\n      }\r\n\r\n      function deleteBook(e){\r\n          e.preventDefault();\r\n          console.log(\"test\");\r\n          const id = e.target.getAttribute(\"index\");\r\n          console.log(\"delete book:\" + id);\r\n          \r\n          const bookData = books.filter(book => id === book.key_id)\r\n          console.log(\"books\",bookData);\r\n          API.deleteBook(bookData)\r\n          .then((res) => {\r\n            loadBooks()\r\n          alert(\"Book Deleted Successfully!!\")})\r\n          .catch(err => console.log(err)) \r\n      }\r\n\r\n\r\n    return (\r\n        <div class=\"jumbotron\">\r\n            <center>\r\n                <h1 class=\"display-4\">Saved Search Results</h1>\r\n                <hr class=\"my-4\" />\r\n            </center>\r\n            <Container>\r\n                <Row>\r\n                    <Col size=\"xs-12\">\r\n                        <Results>\r\n                            {books.map((book) => {\r\n                                return (\r\n                                    <ResultsListItem\r\n                                        key_id={book.key_id}\r\n                                        key={book.key_id}\r\n                                        title={book.title}\r\n                                        authors={book.authors}\r\n                                        description={book.description}\r\n                                        image={book.image}\r\n                                        link={book.link}\r\n                                        saveBook={deleteBook}\r\n                                        buttonText=\"Delete\"\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </Results>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Saved;","import React from 'react';\nimport Navbar from './components/Navbar';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Search from \"./components/Search\";\nimport Saved from \"./components/Saved\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Navbar/>\n      <Switch>\n      <Route exact path={[\"/\", \"/search\"]} component={Search}/>\n      <Route exact path={\"/saved\"} component={Saved}/>\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}